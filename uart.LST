C51 COMPILER V6.02  UART                                                                   05/08/2017 12:25:06 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\uart.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\uart.c DEBUG OBJECTEXTEND

stmt level    source

   1          /***********************************************************************
   2          MODULE:    UART
   3          VERSION:   1.04
   4          CONTAINS:  Routines for controlling the UART peripheral on the Philips
   5                     P89LPC932A1
   6          COPYRIGHT: Embedded Systems Academy, Inc. - www.esacademy.com
   7          LICENSE:   May be freely used in commercial and non-commercial code
   8                     without royalties provided this copyright notice remains
   9                     in this file and unaltered
  10          WARNING:   IF THIS FILE IS REGENERATED BY CODE ARCHITECT ANY CHANGES
  11                     MADE WILL BE LOST. WHERE POSSIBLE USE ONLY CODE ARCHITECT
  12                     TO CHANGE THE CONTENTS OF THIS FILE
  13          GENERATED: On "May 11 2011" at "18:32:24" by Code Architect 2.06
  14          ***********************************************************************/
  15          
  16          // SFR description needs to be included
  17          #include "reg932.h"
  18          #include "uart.h"
  19          
  20          // flag that indicates if the UART is busy transmitting or not
  21          static bit mtxbusy;
  22          
  23          //set the green led
  24          //sbit gLED = P2^7;
  25          
  26          /***********************************************************************
  27          DESC:    Initializes UART for mode 1
  28                   Baudrate: 9600
  29          RETURNS: Nothing
  30          CAUTION: If interrupts are being used then EA must be set to 1
  31                   after calling this function
  32          ************************************************************************/
  33          void uart_init(void)
  34          {
  35   1        // configure UART
  36   1        // clear SMOD0
  37   1        PCON &= ~0x40;
  38   1        SCON = 0x50;
  39   1        // set or clear SMOD1
  40   1        PCON &= 0x7F;
  41   1        PCON |= (0 << 8);
  42   1        SSTAT = 0x00;
  43   1      
  44   1        // enable break detect
  45   1        AUXR1 |= 0x40;
  46   1      
  47   1        // configure baud rate generator
  48   1        BRGCON = 0x00;
  49   1        BRGR0 = 0xF0;
  50   1        BRGR1 = 0x02;
  51   1        BRGCON = 0x03;
  52   1      
  53   1        // TxD = push-pull, RxD = input
  54   1        P1M1 = 0x02;
  55   1        P1M2 = 0x01;
C51 COMPILER V6.02  UART                                                                   05/08/2017 12:25:06 PAGE 2   

  56   1      
  57   1        // initially not busy
  58   1        mtxbusy = 0;
  59   1      
  60   1        // set isr priority to 0
  61   1        IP0 = 1;
  62   1        IP0H = 1;
  63   1        
  64   1        // enable uart interrupt
  65   1        ES = 1;
  66   1        EA = 1;
  67   1      
  68   1      
  69   1      } // uart_init
  70          
  71          /***********************************************************************
  72          DESC:    UART Interrupt Service Routine
  73          RETURNS: Nothing
  74          CAUTION: uart_init must be called first
  75                   EA must be set to 1
  76          ************************************************************************/
  77          void uart_isr(void) interrupt 4 using 1
  78          {
  79   1        if (RI)
  80   1        {
  81   2          // PUT CODE THAT EXECUTES WHEN RECEIVING A BYTE HERE
  82   2      	//gLED = ~gLED;
  83   2           
  84   2          // clear interrupt flag
  85   2          RI = 0;
  86   2        } // if
  87   1      
  88   1        if (TI)
  89   1        {
  90   2          // clear interrupt flag
  91   2          TI = 0;
  92   2          // no longer busy
  93   2          mtxbusy = 0;
  94   2        } // if
  95   1      
  96   1      } // uart_isr
  97          
  98          /***********************************************************************
  99          DESC:    Transmits a 8-bit value via the UART in the current mode
 100                   May result in a transmit interrupt if enabled.
 101          RETURNS: Nothing
 102          CAUTION: uart_init must be called first
 103          ************************************************************************/
 104          void uart_transmit(char c)
 105          {
 106   1        while(mtxbusy);
 107   1        mtxbusy = 1;
 108   1        SBUF = c;
 109   1      } // uart_transmit
 110          
 111          /***********************************************************************
 112          DESC:    Gets a received 8-bit value from the UART
 113          RETURNS: Received data
 114          CAUTION: uart_init must be called first
 115          ************************************************************************/
 116          unsigned char uart_get
 117            (
C51 COMPILER V6.02  UART                                                                   05/08/2017 12:25:06 PAGE 3   

 118            void
 119            )
 120          {
 121   1        return SBUF;
 122   1      } // uart_get


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     69    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
