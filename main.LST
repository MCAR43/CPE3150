C51 COMPILER V6.02  MAIN                                                                   05/06/2017 17:50:21 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\main.c DEBUG OBJECTEXTEND

stmt level    source

   1          #include "reg932.h"
   2          #include "uart.h"
   3          #include <stdlib.h>
   4          sbit mole0_0 = P2 ^ 4; //LEDs
   5          sbit mole0_1 = P0 ^ 5;
   6          sbit mole0_2 = P2 ^ 7;
   7          sbit mole1_0 = P0 ^ 6;
   8          sbit mole1_1 = P1 ^ 6;
   9          sbit mole1_2 = P0 ^ 4;
  10          sbit mole2_0 = P2 ^ 5;
  11          sbit mole2_1 = P0 ^ 7;
  12          sbit mole2_2 = P2 ^ 6;
  13          
  14          sbit hole0_0 = P2 ^ 0; //Buttons
  15          sbit hole0_1 = P0 ^ 1;
  16          sbit hole0_2 = P2 ^ 3;
  17          sbit hole1_0 = P0 ^ 2;
  18          sbit hole1_1 = P1 ^ 4;
  19          sbit hole1_2 = P0 ^ 0;
  20          sbit hole2_0 = P2 ^ 1;
  21          sbit hole2_1 = P0 ^ 3;
  22          sbit hole2_2 = P2 ^ 2;
  23          
  24          sbit strike1 = P3 ^ 1;//Strike outs
  25          sbit strike2 = P3 ^ 0;
  26          sbit strike3 = P1 ^ 0;
  27          
  28          sbit speaker = P1 ^ 7;//Speaker / buzzer
  29          
  30          
  31          void delay();
  32          void strikeOut(unsigned char s);
  33          void getTone();
  34          void missTone();
  35          void endGame();
  36          void sendData(char score);
  37          void setLED(unsigned char row, unsigned char col); //Sets the specified LED (sets it to 0)
  38          void clearLED(unsigned char row, unsigned char col); //Clears the specified LED (sets it to 1)
  39          unsigned char getHole(unsigned char row, unsigned char col); //Gets the current value for the button
  40          unsigned char wait(int difficulty, unsigned char row, unsigned char col); //Will return 1 if the button is
             - pressed on time
  41          void setPorts(void); //Making sure the LED's work on the simon-board by setting them into bi-directional m
             -ode
  42          
  43          void buzz() interrupt 1 {
  44   1      
  45   1      speaker = ~speaker;
  46   1      
  47   1      }
  48          
  49          void main(void) {
  50   1      
  51   1          unsigned int difficulty; //using the max demay for a timer, this is the number of loops that we will w
             -ait for at max time
  52   1          unsigned char test = 0;
C51 COMPILER V6.02  MAIN                                                                   05/06/2017 17:50:21 PAGE 2   

  53   1          unsigned char menu = 0; //Var to decide if the game is over (main loop control var)
  54   1      	unsigned char gameOver = 0;
  55   1      	unsigned char row = 0;
  56   1      	unsigned char col = 0;
  57   1      	unsigned char score = 0;
  58   1      	unsigned char result = 0;
  59   1      	unsigned char i = 0;
  60   1      	unsigned char strikes = 0;
  61   1      	setPorts(); //has to be called after these variables are declared
  62   1      	uart_init();
  63   1          
  64   1          while (1) {
  65   2      
  66   2      		setLED(0, 0); //Difficulty One
  67   2          	setLED(0, 1); //Difficulty Two
  68   2          	setLED(0, 2); //Difficulty Three
  69   2            
  70   2      	  do { //Main Menu Loop
  71   3              //Should probably do this all in a function to keep our Main clean
  72   3              if (!getHole(0, 0)) {
  73   4                difficulty = 20;//Hard - Magic
  74   4      		  menu = 1;
  75   4              } else if (!getHole(0, 1)) {
  76   4                difficulty = 40;//Medium - Magic
  77   4      		  menu = 1;
  78   4              } else if (!getHole(0, 2)) {
  79   4                difficulty = 60;//Easy - Magic
  80   4      		  menu = 1;
  81   4              }
  82   3            } while (!menu);
  83   2      	  clearLED(0, 0);
  84   2      	  clearLED(0, 1);
  85   2      	  clearLED(0, 2);
  86   2      
  87   2      	  //Game Loop
  88   2      	  do {
  89   3      		row = rand() % 3;
  90   3      		col = rand() % 3;
  91   3      		setLED(row, col);
  92   3      		result = wait(difficulty, row, col);
  93   3      		if(result) {
  94   4      			score++;
  95   4      			sendData(score);
  96   4      			getTone();
  97   4      			//Send Score to Serial
  98   4      		}
  99   3      		else {
 100   4      			//Light up ohe LED on breabdoard
 101   4      			strikes++;
 102   4      			missTone();
 103   4      			missTone();
 104   4      			missTone();
 105   4      			strikeOut(strikes);
 106   4      			if(strikes == 3)
 107   4      				gameOver = 1;
 108   4      		}
 109   3      		clearLED(row, col);
 110   3      		delay();
 111   3      		delay();
 112   3      
 113   3      		
 114   3      
C51 COMPILER V6.02  MAIN                                                                   05/06/2017 17:50:21 PAGE 3   

 115   3      	  }while(!gameOver);
 116   2      
 117   2      	  endGame();
 118   2      	  menu = 0;
 119   2      	  strikes = 0;
 120   2      	  score = 0;
 121   2      	  gameOver = 0;
 122   2       
 123   2          }
 124   1      
 125   1        } //End main
 126          
 127          void setLED(unsigned char row, unsigned char col) {
 128   1        switch (row) {
 129   2        	case 0:
 130   2          {
 131   3            switch (col) {
 132   4            case 0:
 133   4              mole0_0 = 0;
 134   4              break;
 135   4            case 1:
 136   4              mole0_1 = 0;
 137   4              break;
 138   4            case 2:
 139   4              mole0_2 = 0;
 140   4              break;
 141   4            } //end switch col
 142   3          } //end case 0
 143   2          break;
 144   2        case 1:
 145   2          {
 146   3            switch (col) {
 147   4            case 0:
 148   4              mole1_0 = 0;
 149   4              break;
 150   4            case 1:
 151   4              mole1_1 = 0;
 152   4              break;
 153   4            case 2:
 154   4              mole1_2 = 0;
 155   4              break;
 156   4            } //end switch col
 157   3          } //end case 1
 158   2          break;
 159   2        case 2:
 160   2          {
 161   3            switch (col) {
 162   4            case 0:
 163   4              mole2_0 = 0;
 164   4              break;
 165   4            case 1:
 166   4              mole2_1 = 0;
 167   4              break;
 168   4            case 2:
 169   4              mole2_2 = 0;
 170   4              break;
 171   4            } //end switch col
 172   3          } //end case 2
 173   2          break;
 174   2        } //end case switch
 175   1      }
 176          
C51 COMPILER V6.02  MAIN                                                                   05/06/2017 17:50:21 PAGE 4   

 177          void clearLED(unsigned char row, unsigned char col) {
 178   1        switch (row) {
 179   2        case 0:
 180   2          {
 181   3            switch (col) {
 182   4            case 0:
 183   4              mole0_0 = 1;
 184   4              break;
 185   4            case 1:
 186   4              mole0_1 = 1;
 187   4              break;
 188   4            case 2:
 189   4              mole0_2 = 1;
 190   4              break;
 191   4            } //end switch col
 192   3          } //end case 0
 193   2          break;
 194   2        case 1:
 195   2          {
 196   3            switch (col) {
 197   4            case 0:
 198   4              mole1_0 = 1;
 199   4              break;
 200   4            case 1:
 201   4              mole1_1 = 1;
 202   4              break;
 203   4            case 2:
 204   4              mole1_2 = 1;
 205   4              break;
 206   4            } //end switch col
 207   3          } //end case 1
 208   2          break;
 209   2        case 2:
 210   2          {
 211   3            switch (col) {
 212   4            case 0:
 213   4              mole2_0 = 1;
 214   4              break;
 215   4            case 1:
 216   4              mole2_1 = 1;
 217   4              break;
 218   4            case 2:
 219   4              mole2_2 = 1;
 220   4              break;
 221   4            } //end switch col
 222   3          } //end case 2
 223   2          break;
 224   2        } //end case switch
 225   1      }
 226          
 227          unsigned char getHole(unsigned char row, unsigned col) //Gets the value for the button
 228            {
*** WARNING C235 IN LINE 228 OF .\MAIN.C: parameter 2: different types
 229   1          switch (row) {
 230   2          case 0:
 231   2            {
 232   3              switch (col) {
 233   4              case 0:
 234   4                return ((unsigned char) hole0_0);
 235   4                break;
 236   4              case 1:
 237   4                return ((unsigned char) hole0_1);
C51 COMPILER V6.02  MAIN                                                                   05/06/2017 17:50:21 PAGE 5   

 238   4                break;
 239   4              case 2:
 240   4                return ((unsigned char) hole0_2);
 241   4                break;
 242   4              } //end switch col
 243   3            } //end case 0
 244   2            break;
 245   2          case 1:
 246   2            {
 247   3              switch (col) {
 248   4              case 0:
 249   4                return ((unsigned char) hole1_0);
 250   4                break;
 251   4              case 1:
 252   4                return ((unsigned char) hole1_1);
 253   4                break;
 254   4              case 2:
 255   4                return ((unsigned char) hole1_2);
 256   4                break;
 257   4              } //end switch col
 258   3            } //end case 1
 259   2            break;
 260   2          case 2:
 261   2            {
 262   3              switch (col) {
 263   4              case 0:
 264   4                return ((unsigned char) hole2_0);
 265   4                break;
 266   4              case 1:
 267   4                return ((unsigned char) hole2_1);
 268   4                break;
 269   4              case 2:
 270   4                return ((unsigned char) hole2_2);
 271   4                break;
 272   4              } //end switch col
 273   3            } //end case 2
 274   2            break;
 275   2          } //end case switch
 276   1        }
 277          
 278          unsigned char wait(int difficulty, unsigned char row, unsigned char col) //Boolean is not a default type i
             -n C. Will return 1 if button is pressed on time
 279            {
 280   1          unsigned int index;
 281   1          TMOD = 0x01;
 282   1      	
 283   1      
 284   1          for (index = 0; index < difficulty; index++) {
 285   2      	  TH0 = 0x00;
 286   2            TL0 = 0x00; //These delays must be observable by humans, so difficulty will be number of loops
 287   2            TR0 = 1;
 288   2            while (!TF0) //wait for the max time
 289   2            {
 290   3              if (getHole(row, col) == 0) //buttons are low if pressed, getHole will generate some overhead
 291   3              {
 292   4                TR0 = 0; //Stop timer
 293   4                TF0 = 0; //Reset overflow
 294   4                return 1; //Return 1 is presses
 295   4              } //end if
 296   3            } //end while
 297   2      	  TF0 = 0;
 298   2      	  TR0 = 0;
C51 COMPILER V6.02  MAIN                                                                   05/06/2017 17:50:21 PAGE 6   

 299   2          } //end for, difficulty 
 300   1          return 0; //button was never pressed			
 301   1        } //end wait function
 302          
 303          void setPorts(void) {
 304   1        P0M1 = 0x00; //Set ports 0, 1, and 2 into bi-mode - comment out until it's ready for the simon2
 305   1        P0M2 = 0x00;
 306   1        P1M1 = 0x00;
 307   1        P1M2 = 0x00;
 308   1        P2M1 = 0x00;
 309   1        P2M2 = 0x00;
 310   1      }
 311          
 312          
 313          void delay() {
 314   1      	unsigned int i = 0;
 315   1      	TMOD = 0x10;
 316   1      	for(i = 0; i < 40; i++) {
 317   2      		TH1 = 0xF0;
 318   2      		TL1 = 0x00;
 319   2      		TR1 = 1;
 320   2      		while(TF1 == 0);
 321   2      		TR1 = 0;
 322   2      		TF1 = 0;	
 323   2      	
 324   2      		}
 325   1      	
 326   1      	return;
 327   1      }
 328          
 329          
 330          void getTone() {//C ^ 6, 1046 Hz, (1/1046) = 0.00096s = 960us, 960us/(1.085/6*) = 5309 *(This microcontrol
             -ler is 6 times faster than the standard 8051)
 331   1      	TMOD = 0x01;
 332   1      	TH0 = 0xEB;
 333   1      	TL0 = 0x42;
 334   1      	EA = 1;
 335   1      	ET0 = 1;
 336   1      	TR0 = 1;
 337   1      	delay();
 338   1      	TR0 = 0;
 339   1      	TF0 = 0;
 340   1      	ET0 = 0;
 341   1      
 342   1      	return;
 343   1      }
 344          
 345          void missTone() {//C ^ 6, 1046 Hz, (1/1046) = 0.00096s = 960us, 960us/(1.085/6*) = 5309 *(This microcontro
             -ller is 6 times faster than the standard 8051)
 346   1      	TMOD = 0x01;
 347   1      	TH0 = 0xFF;
 348   1      	TL0 = 0xFF;
 349   1      	EA = 1;
 350   1      	ET0 = 1;
 351   1      	TR0 = 1;
 352   1      	delay();
 353   1      	TR0 = 0;
 354   1      	TF0 = 0;
 355   1      	ET0 = 0;
 356   1      
 357   1      	return;
 358   1      }
C51 COMPILER V6.02  MAIN                                                                   05/06/2017 17:50:21 PAGE 7   

 359          void sendData(char score) {
 360   1      unsigned char i = 0;
 361   1      char temp = 0;
 362   1      char sc[10] = "Score :";
 363   1      //lower = score & 0x0F;
 364   1      //upper = score & 0xF0;
 365   1      //upper = (lower > 9) ? (upper+1) : (upper);
 366   1      //upper = (upper % 10) + 0x30;
 367   1      //lower = (lower % 10) + 0x30;
 368   1      temp = ((score / 10) << 4) | (score % 10);
 369   1      
 370   1      while(sc[i] != '\0'){
 371   2      	uart_transmit(sc[i]);
 372   2      	i++;
 373   2      }
 374   1      
 375   1      i = 0;
 376   1      uart_transmit(((temp & 0xF0) >> 4) + 0x30);
 377   1      uart_transmit((temp & 0x0F) + 0x30);
 378   1      uart_transmit('\r');
 379   1      uart_transmit('\n');
 380   1      
 381   1      
 382   1      }
 383          
 384          void strikeOut(unsigned char s) {
 385   1      
 386   1      }
*** WARNING C280 IN LINE 384 OF .\MAIN.C: 's': unreferenced local variable
 387          
 388          void endGame() {
 389   1      
 390   1      	unsigned char i = 0;
 391   1      	char sc[10] = "Game Over!";
 392   1      	for(i = 0; i < 10; i++)
 393   1      		uart_transmit(sc[i]);
 394   1      	for(i = 0; i < 5; i++) {
 395   2      		uart_transmit('\r');
 396   2      		uart_transmit('\n');
 397   2      	}
 398   1      
 399   1      }
 400          
 401          
 402          
 403          
 404          
 405          
 406          
 407          
 408          
 409          
 410          
 411          
 412          
 413          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    837    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V6.02  MAIN                                                                   05/06/2017 17:50:21 PAGE 8   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      39
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
